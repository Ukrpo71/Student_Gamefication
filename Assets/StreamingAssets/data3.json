{
	"allRoundData": [{
		"name": "3",
		"questions": [{
			"questionText": "С помощью чего реализуется принцип полиморфизма в С ++ ?",
			"answers": [{
					"answerText": "Наличия множественного наследования.",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "Наличия виртуальных методов.",
					"pointsAddedForCorrectAnswer": 1
				},
				{
					"answerText": "Использование виртуального наследования",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "Наличия абстрактных классов",
					"pointsAddedForCorrectAnswer": 0
				}
			]
		}, {
			"questionText": "В программе описано класс и объект class A {public: int a, b, c; }; A * obj; Как обратиться к атрибуту c ?",
			"answers": [{
					"answerText": "obj.c",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "obj-> с",
					"pointsAddedForCorrectAnswer": 1
				},
				{
					"answerText": "obj A -> -> с",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "obj-> A.с",
					"pointsAddedForCorrectAnswer": 0
				}
			]
		}, {
			"questionText": "Какая из перечисленных функций не может быть конструктором?",
			"answers": [{
				"answerText": "String ()",
				"pointsAddedForCorrectAnswer": 0
			}, {
				"answerText": "String (String & s)",
				"pointsAddedForCorrectAnswer": 0
			}, {
				"answerText": "void String () ",
				"pointsAddedForCorrectAnswer": 1
			}, {
				"answerText": "String (const int a)",
				"pointsAddedForCorrectAnswer": 0
			}]
		}, {
			"questionText": "Отметьте правильное утверждение для абстрактного класса для языка С ++",
			"answers": [{
					"answerText": "Класс, у которого все методы чисто виртуальные, называется абстрактным",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "Невозможно создать объект абстрактного класса",
					"pointsAddedForCorrectAnswer": 1
				},
				{
					"answerText": "Абстрактный базовый класс навязывает определенный интерфейс всем производным из него классам",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "В абстрактном классе не описываются методы вообще",
					"pointsAddedForCorrectAnswer": 0
				}
			]
		}, {
			"questionText": "Если в программе на языке С ++ в производном классе переопределена операция new то?",
			"answers": [{
					"answerText": "все объекты этого класса и все объекты классов, выведенных из него, будут использовать эту операцию независимо от зоне видимости, в которой она переопределена.",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "производные от этого класса могут использовать глобальную операцию применив операцию базовий_класс :: new",
					"pointsAddedForCorrectAnswer": 1
				},
				{
					"answerText": "операцию new нельзя переопределить",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "в любом случае эта операция будет доступна только в пределах класса-потомка",
					"pointsAddedForCorrectAnswer": 0
				}
			]
		}, {
			"questionText": "Какой из перечисленных методов может быть конструктором для класса String в языке С ++:",
			"answers": [{
					"answerText": "String * String ()",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "String (String & s)",
					"pointsAddedForCorrectAnswer": 1
				},
				{
					"answerText": "const String (int a)",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "void String ()",
					"pointsAddedForCorrectAnswer": 0
				}
			]
		}, {
			"questionText": "Какая функция, не будучи компонентом класса, имеет доступ к его защищенным и внутренних компонентов?",
			"answers": [{
					"answerText": "Шаблонная",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "Дружеская",
					"pointsAddedForCorrectAnswer": 1
				},
				{
					"answerText": "Полиморфная",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "Статическая",
					"pointsAddedForCorrectAnswer": 0
				}
			]
		}, {
			"questionText": "Вызовет данный код ошибку компиляции? class Rectangle public: int a, b; int sum (); int square (); ~ Rect (); }; ?",
			"answers": [{
					"answerText": "Ошибки нет, все записано верно",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "Ошибка являются: имя деструктора должно совпадать с именем класса",
					"pointsAddedForCorrectAnswer": 1
				},
				{
					"answerText": "Ошибка являются: имя деструктора не может начинаться с маленькой буквы",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "Ошибка являются: никакой идентификатор в С ++ не может начинаться со знака",
					"pointsAddedForCorrectAnswer": 0
				}
			]
		}, {
			"questionText": "Укажите правильное объявление виртуального метода, который принимает одно целочисленное значение и возвращает void?",
			"answers": [{
					"answerText": "void SomeFunction (int х) virtual",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "virtual void SomeFunction (int х);",
					"pointsAddedForCorrectAnswer": 1
				},
				{
					"answerText": "virtual SomeFunction (int х)",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "virtual void SomeFunction (int * x)",
					"pointsAddedForCorrectAnswer": 0
				}
			]
		}, {
			"questionText": "Укажите правильное использование оператора friend?",
			"answers": [{
					"answerText": "class A {int_friend CountPass (); private: short i;};",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "class A {public: friend int Н :: CountPass (); private: short i;}; ",
					"pointsAddedForCorrectAnswer": 1
				},
				{
					"answerText": "class A {public: int A1 :: CountPass (); friend: short i;};",
					"pointsAddedForCorrectAnswer": 0
				},
				{
					"answerText": "class A {public: friend int Н :: q; short i;};",
					"pointsAddedForCorrectAnswer": 0
				}
			]
		}]
	}]
}